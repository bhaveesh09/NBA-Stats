{"ast":null,"code":"var _jsxFileName = \"/Users/bhaveesh/Desktop/NBA-stats/NBA-Stats/src/components/player/PlayerCard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"../../state\";\nimport { axiosInstance } from \"../../axiosInstance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlayerCard(_ref) {\n  _s();\n  let {\n    player\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    removePlayerFromList,\n    updatePlayerStatsBySeason\n  } = bindActionCreators(actionCreators, dispatch);\n  let date = new Date();\n  let year = date.getFullYear();\n  let NBASeasons = [];\n  for (year; year > 1978; year--) {\n    NBASeasons.push(year);\n  }\n  const getPlayerSeasonalAverages = async (e, player) => {\n    let initializeStats = {\n      data: [{\n        games_played: 0,\n        min: 0,\n        fgm: 0,\n        fga: 0,\n        fg3m: 0,\n        fg3a: 0,\n        ftm: 0,\n        fta: 0,\n        oreb: 0,\n        dreb: 0,\n        reb: 0,\n        ast: 0,\n        stl: 0,\n        blk: 0,\n        turnover: 0,\n        pf: 0,\n        pts: 0,\n        fg_pct: 0,\n        fg3_pct: 0,\n        ft_pct: 0\n      }]\n    };\n    if (!e) {\n      await axiosInstance.get(`/season_averages?player_ids[]=${player.id}`).then(res => {\n        player.stats = res.data;\n        player.season = 2021;\n        updatePlayerStatsBySeason(player);\n      });\n    }\n    if (e) {\n      await axiosInstance.get(`/season_averages?season=${e.target.value}&player_ids[]=${player.id}`).then(res => {\n        // if statement checks to see if the api has stats. If not we fill in with 0s.\n        // this makes data manipulation easier for later in the project.\n        if (res.data.data.length === 0) {\n          player.stats = initializeStats;\n        } else {\n          player.stats = res.data;\n        }\n        player.season = e.target.value;\n        updatePlayerStatsBySeason(player);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border flex w-96 rounded m-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 flex items-center justify-center text-2xl font-bold hover:opacity-20 cursor-pointer\",\n      style: {},\n      onClick: () => {\n        removePlayerFromList(player.uuid);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-darkest bg-opacity-50 p-1 rounded\",\n        children: player.team\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 flex flex-col p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl\",\n        children: [player.first_name, \" \", player.last_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Season:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"year\",\n          id: \"year\",\n          className: \"bg-darkest border rounded mx-2\",\n          onChange: e => {\n            getPlayerSeasonalAverages(e, player);\n          },\n          children: NBASeasons.length > 0 && NBASeasons.map(NBAseason => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: NBAseason,\n              children: NBAseason\n            }, NBAseason, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerCard, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = PlayerCard;\nvar _c;\n$RefreshReg$(_c, \"PlayerCard\");","map":{"version":3,"names":["React","useDispatch","bindActionCreators","actionCreators","axiosInstance","jsxDEV","_jsxDEV","PlayerCard","_ref","_s","player","dispatch","removePlayerFromList","updatePlayerStatsBySeason","date","Date","year","getFullYear","NBASeasons","push","getPlayerSeasonalAverages","e","initializeStats","data","games_played","min","fgm","fga","fg3m","fg3a","ftm","fta","oreb","dreb","reb","ast","stl","blk","turnover","pf","pts","fg_pct","fg3_pct","ft_pct","get","id","then","res","stats","season","target","value","length","className","children","style","onClick","uuid","team","fileName","_jsxFileName","lineNumber","columnNumber","first_name","last_name","name","onChange","map","NBAseason","_c","$RefreshReg$"],"sources":["/Users/bhaveesh/Desktop/NBA-stats/NBA-Stats/src/components/player/PlayerCard.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"../../state\";\nimport { axiosInstance } from \"../../axiosInstance\";\n\nexport default function PlayerCard({ player }) {\n  \n  const dispatch = useDispatch();\n\n  const { removePlayerFromList, updatePlayerStatsBySeason } =\n    bindActionCreators(actionCreators, dispatch);\n\n  let date = new Date();\n  let year = date.getFullYear();\n  let NBASeasons = [];\n  for (year; year > 1978; year--) {\n    NBASeasons.push(year);\n  }\n\n  const getPlayerSeasonalAverages = async (e, player) => {\n    let initializeStats = {\n      data: [\n        {\n          games_played: 0,\n          min: 0,\n          fgm: 0,\n          fga: 0,\n          fg3m: 0,\n          fg3a: 0,\n          ftm: 0,\n          fta: 0,\n          oreb: 0,\n          dreb: 0,\n          reb: 0,\n          ast: 0,\n          stl: 0,\n          blk: 0,\n          turnover: 0,\n          pf: 0,\n          pts: 0,\n          fg_pct: 0,\n          fg3_pct: 0,\n          ft_pct: 0,\n        },\n      ],\n    };\n    if (!e) {\n      await axiosInstance\n        .get(`/season_averages?player_ids[]=${player.id}`)\n        .then((res) => {\n          player.stats = res.data;\n          player.season = 2021;\n          updatePlayerStatsBySeason(player);\n        });\n    }\n    if (e) {\n      await axiosInstance\n        .get(\n          `/season_averages?season=${e.target.value}&player_ids[]=${player.id}`\n        )\n        .then((res) => {\n          // if statement checks to see if the api has stats. If not we fill in with 0s.\n          // this makes data manipulation easier for later in the project.\n          if (res.data.data.length === 0) {\n            player.stats = initializeStats;\n          } else {\n            player.stats = res.data;\n          }\n\n          player.season = e.target.value;\n          updatePlayerStatsBySeason(player);\n        });\n    }\n  };\n  return (\n    <div className=\"border flex w-96 rounded m-2\">\n      <div\n        className=\"w-1/2 flex items-center justify-center text-2xl font-bold hover:opacity-20 cursor-pointer\"\n        style={{\n    \n        }}\n        onClick={() => {\n          removePlayerFromList(player.uuid);\n        }}\n      >\n        <div className=\"bg-darkest bg-opacity-50 p-1 rounded\">\n          {player.team}\n        </div>\n      </div>\n      <div className=\"w-1/2 flex flex-col p-4\">\n        <div className=\"text-xl\">\n          {player.first_name} {player.last_name}\n        </div>\n        <div className=\" flex\">\n          <div>Season:</div>\n          <select\n            name=\"year\"\n            id=\"year\"\n            className=\"bg-darkest border rounded mx-2\"\n            onChange={(e) => {\n              getPlayerSeasonalAverages(e, player);\n            }}\n          >\n            {NBASeasons.length > 0 &&\n              NBASeasons.map((NBAseason) => {\n                return (\n                  <option key={NBAseason} value={NBAseason}>\n                    {NBAseason}\n                  </option>\n                );\n              })}\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}